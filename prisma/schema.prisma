generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description     String?           @db.VarChar(255)
  name            String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  user_id         String            @db.Uuid
  tenant_id       String            @db.VarChar(255)
  user            user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  content         content[]
  contract        contract[]
  discount_coupon discount_coupon[]
}

model company_discount {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model company_rating {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model content {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String   @db.VarChar(255)
  body       String
  status     String   @db.VarChar(255)
  creator_id String   @db.Uuid
  company_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model content_review {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model content_type {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model contract {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date DateTime  @db.Timestamp(6)
  end_date   DateTime  @db.Timestamp(6)
  terms      String
  creator_id String    @db.Uuid
  company_id String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  company    company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payment    payment[]
}

model discount_coupon {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code        String   @db.VarChar(255)
  value       Int
  expiry_date DateTime @db.Timestamp(6)
  company_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  company     company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount         Int
  payment_date   DateTime @db.Timestamp(6)
  payment_method String   @db.VarChar(255)
  contract_id    String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  contract       contract @relation(fields: [contract_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  company     company[]
  content     content[]
  contract    contract[]
}

model user_profile {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}
